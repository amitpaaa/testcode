beforeEach(async () => {
   await TestBed.configureTestingModule({
       declarations: [IssueDispositionDashboardComponent, BasicFilterComponent],
       imports: [
           HttpClientTestingModule,
           ReactiveFormsModule,
           MaterialCommonModule,
           NoopAnimationsModule,
           MatIconTestingModule,
       ],
       providers: [
           { provide: MatDialog, useValue: jasmine.createSpyObj('MatDialog', ['open']) },
           { provide: ChangeDetectorRef, useValue: { detectChanges: jasmine.createSpy() } },
           { provide: Router, useValue: { navigate: jasmine.createSpy() } },
           { provide: DateAdapter, useValue: { setLocale: jasmine.createSpy() } },
           { provide: IssueDetailService, useValue: jasmine.createSpyObj('IssueDetailService', ['getIssueDailyDetailsByLogCode']) },
       ],
   }).compileComponents();

   fixture = TestBed.createComponent(IssueDispositionDashboardComponent);
   const formBuilder = TestBed.inject(FormBuilder);
   component = fixture.componentInstance;
   component.basicFilter = TestBed.createComponent(BasicFilterComponent).componentInstance;
   component.basicFilter.filterForm = formBuilder.group({
       executionTimestamp: [null],
       asofDate: [null],
       contractName: [null],
   });

   fixture.detectChanges();
});
