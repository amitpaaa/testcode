private Map<String, Path<?>> getColumnPaths(Root<T> root) {
    Map<String, Path<?>> columnPaths = new HashMap<>();
    // List of column names
    List<String> columns = Arrays.asList(
        "n_abs_amount_field_value",
        "n_abs_principal_amount",
        "n_abs_total_amount_field_value",
        "n_abs_total_principal_amount",
        // Add other column names here
        "businessCheckGroup",
        "execId"
    );
    // Create paths for each column
    for (String column : columns) {
        columnPaths.put(column, root.get(column));
    }
    return columnPaths;
}





private Map<String, Path<?>> getColumnPaths(Root<T> root, Class<?> entityClass) {
    Map<String, Path<?>> columnPaths = new HashMap<>();

    // Get all fields from the entity class
    Field[] fields = entityClass.getDeclaredFields();
    
    for (Field field : fields) {
        String fieldName = field.getName();
        columnPaths.put(fieldName, root.get(fieldName));
    }

    return columnPaths;
}






Map<String, Path<?>> columnPaths = getColumnPaths(root, HealthCheckSummary.class);


multiselect


List<Path<?>> groupByColumns = new ArrayList<>(columnPaths.values());
query.groupBy(groupByColumns.toArray(new Path<?>[0]));



