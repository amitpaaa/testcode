import { ComponentFixture, TestBed } from '@angular/core/testing';
import { IssueDispositionDashboardComponent } from './issue-disposition-dashboard.component';
import { IssueDetailservice } from '../services/issue-detail.service';
import { MatDialog } from '@angular/material/dialog';
import { ChangeDetectorRef } from '@angular/core';
import { Router } from '@angular/router';
import { DateAdapter } from '@angular/material/core';
import { of } from 'rxjs';

describe('IssueDispositionDashboardComponent', () => {
  let component: IssueDispositionDashboardComponent;
  let fixture: ComponentFixture<IssueDispositionDashboardComponent>;
  let issueDetailServiceSpy: jasmine.SpyObj<IssueDetailservice>;

  beforeEach(async () => {
    const issueDetailServiceMock = jasmine.createSpyObj('IssueDetailservice', ['getIssueDetails']);

    await TestBed.configureTestingModule({
      declarations: [IssueDispositionDashboardComponent],
      providers: [
        { provide: IssueDetailservice, useValue: issueDetailServiceMock },
        { provide: MatDialog, useValue: {} },
        { provide: ChangeDetectorRef, useValue: { detectChanges: jasmine.createSpy() } },
        { provide: Router, useValue: { navigate: jasmine.createSpy() } },
        { provide: DateAdapter, useValue: { setLocale: jasmine.createSpy() } }
      ]
    }).compileComponents();

    fixture = TestBed.createComponent(IssueDispositionDashboardComponent);
    component = fixture.componentInstance;
    issueDetailServiceSpy = TestBed.inject(IssueDetailservice) as jasmine.SpyObj<IssueDetailservice>;

    fixture.detectChanges();
  });

  it('should create the component', () => {
    expect(component).toBeTruthy();
  });

  it('should initialize with default values', () => {
    expect(component.pageSize).toBe(10);
    expect(component.defaultSortBy).toBe('id');
    expect(component.defaultSortDir).toBe('desc');
    expect(component.dataSource()).toEqual(jasmine.objectContaining({
      currentPage: 1,
      totalRecords: 0,
      totalPages: 0
    }));
  });
});
